name: Run Gitea, Database, and Python Script

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  setup-docker-python:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Install Docker and Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y ca-certificates curl gnupg
        sudo install -m 0755 -d /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        sudo chmod a+r /etc/apt/keyrings/docker.gpg
        echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
          $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
        docker --version
        docker compose version

    - name: Create docker-compose.yml (without Python Runner)
      run: |
        echo 'version: "3.8"
        services:
          gitea:
            image: gitea/gitea:latest
            container_name: gitea
            ports:
              - "3000:3000"
              - "2222:22"
            volumes:
              - gitea_data:/data
            environment:
              - USER_UID=1000
              - USER_GID=1000
            depends_on:
              - db

          db:
            image: mariadb:latest
            container_name: gitea_db
            environment:
              - MYSQL_ROOT_PASSWORD=rootpassword
              - MYSQL_DATABASE=gitea
              - MYSQL_USER=gitea
              - MYSQL_PASSWORD=giteapassword
            volumes:
              - db_data:/var/lib/mysql

        volumes:
          gitea_data:
          db_data:' > docker-compose.yml

    - name: Start Gitea and Database Services
      run: docker compose up -d

    - name: Check Running Containers
      run: docker ps

    - name: Setup Python Environment
      run: |
        sudo apt-get update
        sudo apt-get install -y python3 python3-pip
        python3 --version
        pip3 --version

    - name: Install Python Dependencies
      run: |
        pip3 install telebot

    - name: Run Python Script
      run: |
        git clone https://github.com/Ko0uu8/A.git
        cd A
        chmod +x venompapa
        python3 Ven.py &

    - name: Verify Script is Running
      run: ps aux | grep Ven.py
